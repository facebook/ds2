language: cpp

env:
  - BUILD_TYPE="Debug"    TARGET="Android-ARM"
  - BUILD_TYPE="Debug"    TARGET="Android-ARM64"
  - BUILD_TYPE="Debug"    TARGET="Android-X86"
  - BUILD_TYPE="Debug"    TARGET="Android-X86_64"
  - BUILD_TYPE="Debug"    TARGET="Linux-ARM"
  - BUILD_TYPE="Debug"    TARGET="Linux-X86"
  - BUILD_TYPE="Debug"    TARGET="Linux-X86_64"
  - BUILD_TYPE="Debug"    TARGET="Linux-X86_64"   LLGS_TESTS="1"
  - BUILD_TYPE="Release"  TARGET="Android-ARM"
  - BUILD_TYPE="Release"  TARGET="Android-ARM64"
  - BUILD_TYPE="Release"  TARGET="Android-X86"
  - BUILD_TYPE="Release"  TARGET="Android-X86_64"
  - BUILD_TYPE="Release"  TARGET="Linux-ARM"
  - BUILD_TYPE="Release"  TARGET="Linux-X86"
  - BUILD_TYPE="Release"  TARGET="Linux-X86_64"
  - BUILD_TYPE="Release"  TARGET="Linux-X86_64"   LLGS_TESTS="1"

matrix:
  fast_finish: true

before_install:
  - if [ "$TARGET" = "Linux-ARM" ];     then sudo add-apt-repository -y ppa:linaro-maintainers/toolchain; fi
  - if [ "$TARGET" = "Linux-X86" ];     then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;      fi
  - if [ "$TARGET" = "Linux-X86_64" ];  then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;      fi
  - sudo add-apt-repository -y ppa:andykimpe/cmake
  - sudo apt-get update

install:
  - if [ "$TARGET" = "Android-ARM" ];     then ./Support/Scripts/prepare-android-toolchain.sh "arm";      fi
  - if [ "$TARGET" = "Android-ARM64" ];   then ./Support/Scripts/prepare-android-toolchain.sh "aarch64";  fi
  - if [ "$TARGET" = "Android-X86" ];     then ./Support/Scripts/prepare-android-toolchain.sh "x86";      fi
  - if [ "$TARGET" = "Android-X86_64" ];  then ./Support/Scripts/prepare-android-toolchain.sh "x86";      fi
  - if [ "$TARGET" = "Linux-ARM" ];       then sudo apt-get install -y g++-arm-linux-gnueabi;             fi
  - if [ "$TARGET" = "Linux-X86" ];       then sudo apt-get install -y g++-4.8-multilib;                  fi
  - if [ "$TARGET" = "Linux-X86_64" ];    then sudo apt-get install -y g++-4.8;                           fi
  # Running LLGS tests requires an install of lldb (for the tests to be able to
  # use the lldb python library without us building it).
  - if [ "$LLGS_TESTS" = "1" ];           then sudo apt-get install -y swig lldb-3.3;                     fi
  - sudo apt-get install -y cmake

before_script:
  - mkdir -p build && cd build

script:
  - cmake -DCMAKE_TOOLCHAIN_FILE="../Support/CMake/Toolchain-${TARGET}.cmake" -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" ..
  - make
  - if [ "$LLGS_TESTS" = "1" ]; then ../Support/Scripts/run-llgs-tests.sh; fi
