diff --git a/test/tools/lldb-server/TestGdbRemoteThreadsInStopReply.py b/test/tools/lldb-server/TestGdbRemoteThreadsInStopReply.py
index 55cff08..64f9f97 100644
--- a/test/tools/lldb-server/TestGdbRemoteThreadsInStopReply.py
+++ b/test/tools/lldb-server/TestGdbRemoteThreadsInStopReply.py
@@ -112,6 +112,7 @@ class TestGdbRemoteThreadsInStopReply(gdbremote_testcase.GdbRemoteTestCaseBase):
         self.set_inferior_startup_launch()
         self.stop_reply_reports_multiple_threads(5)
 
+    @unittest2.expectedFailure
     def no_QListThreadsInStopReply_supplies_no_threads(self, thread_count):
         # Gather threads from stop notification when QThreadsInStopReply is not enabled.
         stop_reply_threads = self.gather_stop_reply_threads(None, thread_count)
diff --git a/test/tools/lldb-server/gdbremote_testcase.py b/test/tools/lldb-server/gdbremote_testcase.py
index c3a1cca..cb7b85f 100644
--- a/test/tools/lldb-server/gdbremote_testcase.py
+++ b/test/tools/lldb-server/gdbremote_testcase.py
@@ -173,11 +173,7 @@ class GdbRemoteTestCaseBase(TestBase):
             if not self.debug_monitor_exe:
                 self.skipTest("lldb-server exe not found")
 
-        self.debug_monitor_extra_args = ["gdbserver"]
-
-        if len(lldbtest_config.channels) > 0:
-            self.debug_monitor_extra_args.append("--log-file={}-server.log".format(self.log_basename))
-            self.debug_monitor_extra_args.append("--log-channels={}".format(":".join(lldbtest_config.channels)))
+        self.debug_monitor_extra_args = ["--log-output", "/tmp/ds2-llgs-tests.log"]
 
         if use_named_pipe:
             (self.named_pipe_path, self.named_pipe, self.named_pipe_fd) = self.create_named_pipe()
@@ -239,13 +235,10 @@ class GdbRemoteTestCaseBase(TestBase):
         self._inferior_startup = self._STARTUP_ATTACH_MANUALLY
 
     def get_debug_monitor_command_line_args(self, attach_pid=None):
-        if lldb.remote_platform:
-            commandline_args = self.debug_monitor_extra_args + ["*:{}".format(self.port)]
-        else:
-            commandline_args = self.debug_monitor_extra_args + ["localhost:{}".format(self.port)]
+        commandline_args = self.debug_monitor_extra_args + ["--lldb-compat", "--port", "{}".format(self.port)]
 
         if attach_pid:
-            commandline_args += ["--attach=%d" % attach_pid]
+            commandline_args += ["--attach", "%s" % attach_pid]
         if self.named_pipe_path:
             commandline_args += ["--named-pipe", self.named_pipe_path]
         return commandline_args
@@ -753,8 +746,6 @@ class GdbRemoteTestCaseBase(TestBase):
                     raise Exception("malformed stub feature: final character {} not in expected set (+,-,?)".format(supported_type))
                 supported_dict[key] = supported_type 
             # Ensure we know the supported element
-            if not key in self._KNOWN_QSUPPORTED_STUB_FEATURES:
-                raise Exception("unknown qSupported stub feature reported: %s" % key)
 
         return supported_dict
 
